//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace getcnIP {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("getcnIP.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 var direct = &quot;__DIRECT__&quot;;
        ///if (direct == &quot;__DIR&quot; + &quot;ECT__&quot;) direct = &quot;DIRECT;&quot;;
        ///
        ///var wall_proxy = function(){ return &quot;__PROXY__&quot;; };
        ///var wall_v6_proxy = function(){ return &quot;__PROXY__&quot;; };
        ///
        ///var nowall_proxy = function(){ return direct; };
        ///var ip_proxy = function(){ return wall_proxy(); };
        ///var ipv6_proxy = function(){ return wall_v6_proxy(); };
        ///
        ///var cnIpRange = __cnIpRange__
        ///var cnIp16Range = __cnIp16Range__
        ///
        ///var whiteIpList = {
        ///	&quot;188.188.188.188&quot;:1,
        ///	&quot;100.100.100.100&quot;:1
        ///};
        ///
        ///var subnetIpRangeList = [
        ///0,167772 [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string ss_cnip_temp {
            get {
                return ResourceManager.GetString("ss_cnip_temp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 var direct = &quot;__DIRECT__&quot;;
        ///if (direct == &quot;__DIR&quot; + &quot;ECT__&quot;) direct = &quot;DIRECT;&quot;;
        ///
        ///var wall_proxy = function(){ return direct; };
        ///var wall_v6_proxy = function(){ return direct; };
        ///
        ///var nowall_proxy = function(){ return &quot;__PROXY__&quot;; };
        ///var ip_proxy = function(){ return nowall_proxy(); };
        ///var ipv6_proxy = function(){ return wall_v6_proxy(); };
        ///
        ///var cnIpRange = __cnIpRange__
        ///var cnIp16Range = __cnIp16Range__
        ///
        ///var whiteIpList = {
        ///	&quot;188.188.188.188&quot;:1,
        ///	&quot;100.100.100.100&quot;:1
        ///};
        ///
        ///var subnetIpRangeList = [
        ///0,16777216, [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string ss_white_r_temp {
            get {
                return ResourceManager.GetString("ss_white_r_temp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 var direct = &quot;__DIRECT__&quot;;
        ///if (direct == &quot;__DIR&quot; + &quot;ECT__&quot;) direct = &quot;DIRECT;&quot;;
        ///
        ///var wall_proxy = function(){ return &quot;__PROXY__&quot;; };
        ///var wall_v6_proxy = function(){ return &quot;__PROXY__&quot;; };
        ///
        ///var nowall_proxy = function(){ return direct; };
        ///var ip_proxy = function(){ return wall_proxy(); };
        ///var ipv6_proxy = function(){ return wall_v6_proxy(); };
        ///
        ///var cnIpRange = __cnIpRange__
        ///var cnIp16Range = __cnIp16Range__
        ///
        ///var whiteIpList = {
        ///	&quot;188.188.188.188&quot;:1,
        ///	&quot;100.100.100.100&quot;:1
        ///};
        ///
        ///var subnetIpRangeList = [
        ///0,167772 [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string ss_white_temp {
            get {
                return ResourceManager.GetString("ss_white_temp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 #**********************************************************************
        ///# [proxy_all] 默认代理
        ///# [bypass_all] 默认直连
        ///# [outbound_block_list] 禁止访问列表
        ///# [bypass_list] 直连列表
        ///# [proxy_list] 代理列表
        ///# [remote_dns] 远程 DNS 解析 -不加使用本地 DNS
        ///#**********************************************************************
        ///[proxy_all]
        ///
        ///[bypass_list]
        ///
        ///# CN域名直连
        ///^(.*)\.cn$
        ///
        ///# 中国国内常见域名关键词直连
        ///#^cn\.\w(.*)$
        ///#(^|\.)\w*-cn\w*\.\w*$
        ///# ^.*steam.*$
        ///
        ///# accelerated-domains china
        ///__white_domains__
        ///#******************************************************** [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string whitelist_temp {
            get {
                return ResourceManager.GetString("whitelist_temp", resourceCulture);
            }
        }
    }
}
